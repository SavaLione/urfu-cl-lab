/*
 * SPDX-License-Identifier: BSD-3-Clause
 * 
 * Copyright (c) 2022, Saveliy Pototskiy (SavaLione) (savalione.com)
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the copyright holder nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */
/**
 * @file
 * @brief Platform specific things
 * @author Saveliy Pototskiy (SavaLione)
 * @date 22 Nov 2022
 */
#ifndef PLATFORM_PLATFORM_H
#define PLATFORM_PLATFORM_H

/* Project version */
#define NYX_VERSION "${PROJECT_VERSION}"
#define NYX_VERSION_MAJOR "${PROJECT_VERSION_MAJOR}"
#define NYX_VERSION_MINOR "${PROJECT_VERSION_MINOR}"
#define NYX_VERSION_PATCH "${PROJECT_VERSION_PATCH}"

/* Project description */
#define NYX_DESCRIPTION "${PROJECT_DESCRIPTION}"

/* Project homepage url */
#define NYX_HOMEPAGE_URL "${PROJECT_HOMEPAGE_URL}"

/* Project generator */
#define NYX_GENERATOR "${CMAKE_GENERATOR}"

/* Project build type */
#define NYX_BUILD_TYPE "${CMAKE_BUILD_TYPE}"

/* Project C compiler variables */
#define NYX_C_EXTENSIONS "${CMAKE_C_EXTENSIONS}"
#define NYX_C_STANDARD "${CMAKE_C_STANDARD}"
#define NYX_C_COMPILER "${CMAKE_C_COMPILER}"
#define NYX_C_COMPILER_ID "${CMAKE_C_COMPILER_ID}"

#define NYX_C_COMPILER_PREDEFINES_COMMAND "${CMAKE_C_COMPILER_PREDEFINES_COMMAND}"
#define NYX_C_COMPILER_TARGET "${CMAKE_C_COMPILER_TARGET}"
#define NYX_C_COMPILER_VERSION "${CMAKE_C_COMPILER_VERSION}"
#define NYX_C_FLAGS "${CMAKE_C_FLAGS}"
#define NYX_C_SIMULATE_ID "${CMAKE_C_SIMULATE_ID}"
#define NYX_C_STANDARD_INCLUDE_DIRECTORIES "${CMAKE_C_STANDARD_INCLUDE_DIRECTORIES}"
#define NYX_C_STANDARD_LIBRARIES "${CMAKE_C_STANDARD_LIBRARIES}"
#define NYX_C_STANDARD_REQUIRED "${CMAKE_C_STANDARD_REQUIRED}"
#define NYX_C_COMPILER_ABI "${CMAKE_C_COMPILER_ABI}"
#define NYX_C_COMPILER_ARCHITECTURE_ID "${CMAKE_C_COMPILER_ARCHITECTURE_ID}"
#define NYX_C_COMPILER_VERSION_INTERNAL "${CMAKE_C_COMPILER_VERSION_INTERNAL}"
#define NYX_C_LINKER_PREFERENCE "${CMAKE_C_LINKER_PREFERENCE}"
#define NYX_C_LINKER_PREFERENCE_PROPAGATES "${CMAKE_C_LINKER_PREFERENCE_PROPAGATES}"
#define NYX_C_PLATFORM_ID "${CMAKE_C_PLATFORM_ID}"

/* Project C++ compiler variables */
#define NYX_CXX_EXTENSIONS "${CMAKE_CXX_EXTENSIONS}"
#define NYX_CXX_STANDARD "${CMAKE_CXX_STANDARD}"
#define NYX_CXX_COMPILER "${CMAKE_CXX_COMPILER}"
#define NYX_CXX_COMPILER_ID "${CMAKE_CXX_COMPILER_ID}"

#define NYX_CXX_COMPILER_PREDEFINES_COMMAND "${CMAKE_CXX_COMPILER_PREDEFINES_COMMAND}"
#define NYX_CXX_COMPILER_TARGET "${CMAKE_CXX_COMPILER_TARGET}"
#define NYX_CXX_COMPILER_VERSION "${CMAKE_CXX_COMPILER_VERSION}"
#define NYX_CXX_FLAGS "${CMAKE_CXX_FLAGS}"
#define NYX_CXX_SIMULATE_ID "${CMAKE_CXX_SIMULATE_ID}"
#define NYX_CXX_STANDARD_INCLUDE_DIRECTORIES "${CMAKE_CXX_STANDARD_INCLUDE_DIRECTORIES}"
#define NYX_CXX_STANDARD_LIBRARIES "${CMAKE_CXX_STANDARD_LIBRARIES}"
#define NYX_CXX_STANDARD_REQUIRED "${CMAKE_CXX_STANDARD_REQUIRED}"
#define NYX_CXX_COMPILER_ABI "${CMAKE_CXX_COMPILER_ABI}"
#define NYX_CXX_COMPILER_ARCHITECTURE_ID "${CMAKE_CXX_COMPILER_ARCHITECTURE_ID}"
#define NYX_CXX_COMPILER_VERSION_INTERNAL "${CMAKE_CXX_COMPILER_VERSION_INTERNAL}"
#define NYX_CXX_LINKER_PREFERENCE "${CMAKE_CXX_LINKER_PREFERENCE}"
#define NYX_CXX_LINKER_PREFERENCE_PROPAGATES "${CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES}"
#define NYX_CXX_PLATFORM_ID "${CMAKE_CXX_PLATFORM_ID}"

/* Cmake version */
#define NYX_CMAKE_VERSION "${CMAKE_VERSION}"
#define NYX_CMAKE_VERSION_MAJOR "${CMAKE_MAJOR_VERSION}"
#define NYX_CMAKE_VERSION_MINOR "${CMAKE_MINOR_VERSION}"
#define NYX_CMAKE_VERSION_PATCH "${CMAKE_PATCH_VERSION}"

/* Are we using external fmt library? */
#cmakedefine NYX_EXTERNAL_FMT

/* Callbacks */
void signal_callback(int signum);

/* Compiler version */
#include "platform/compiler_version.h"

#endif // PLATFORM_PLATFORM_H