/* SPDX-License-Identifier: GPL-2.0-or-later */
/*
 * Copyright (C) 2022-2024 Savelii Pototskii (savalione.com)
 * All rights reserved.
 *
 * Author: Savelii Pototskii <monologuesplus@gmail.com>
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
/**
 * @file
 * @brief Platform specific things
 * @author Savelii Pototskii (savalione.com)
 * @date 22 Nov 2022
 */
#ifndef PLATFORM_PLATFORM_H
#define PLATFORM_PLATFORM_H

/* Project version */
#define NYX_VERSION "${PROJECT_VERSION}"
#define NYX_VERSION_MAJOR "${PROJECT_VERSION_MAJOR}"
#define NYX_VERSION_MINOR "${PROJECT_VERSION_MINOR}"
#define NYX_VERSION_PATCH "${PROJECT_VERSION_PATCH}"

/* Project description */
#define NYX_DESCRIPTION "${PROJECT_DESCRIPTION}"

/* Project homepage url */
#define NYX_HOMEPAGE_URL "${PROJECT_HOMEPAGE_URL}"

/* Project generator */
#define NYX_GENERATOR "${CMAKE_GENERATOR}"

/* Project build type */
#define NYX_BUILD_TYPE "${CMAKE_BUILD_TYPE}"

/* Project C compiler variables */
#define NYX_C_EXTENSIONS "${CMAKE_C_EXTENSIONS}"
#define NYX_C_STANDARD "${CMAKE_C_STANDARD}"
#define NYX_C_COMPILER "${CMAKE_C_COMPILER}"
#define NYX_C_COMPILER_ID "${CMAKE_C_COMPILER_ID}"

#define NYX_C_COMPILER_PREDEFINES_COMMAND "${CMAKE_C_COMPILER_PREDEFINES_COMMAND}"
#define NYX_C_COMPILER_TARGET "${CMAKE_C_COMPILER_TARGET}"
#define NYX_C_COMPILER_VERSION "${CMAKE_C_COMPILER_VERSION}"
#define NYX_C_FLAGS "${CMAKE_C_FLAGS}"
#define NYX_C_SIMULATE_ID "${CMAKE_C_SIMULATE_ID}"
#define NYX_C_STANDARD_INCLUDE_DIRECTORIES "${CMAKE_C_STANDARD_INCLUDE_DIRECTORIES}"
#define NYX_C_STANDARD_LIBRARIES "${CMAKE_C_STANDARD_LIBRARIES}"
#define NYX_C_STANDARD_REQUIRED "${CMAKE_C_STANDARD_REQUIRED}"
#define NYX_C_COMPILER_ABI "${CMAKE_C_COMPILER_ABI}"
#define NYX_C_COMPILER_ARCHITECTURE_ID "${CMAKE_C_COMPILER_ARCHITECTURE_ID}"
#define NYX_C_COMPILER_VERSION_INTERNAL "${CMAKE_C_COMPILER_VERSION_INTERNAL}"
#define NYX_C_LINKER_PREFERENCE "${CMAKE_C_LINKER_PREFERENCE}"
#define NYX_C_LINKER_PREFERENCE_PROPAGATES "${CMAKE_C_LINKER_PREFERENCE_PROPAGATES}"
#define NYX_C_PLATFORM_ID "${CMAKE_C_PLATFORM_ID}"

/* Project C++ compiler variables */
#define NYX_CXX_EXTENSIONS "${CMAKE_CXX_EXTENSIONS}"
#define NYX_CXX_STANDARD "${CMAKE_CXX_STANDARD}"
#define NYX_CXX_COMPILER "${CMAKE_CXX_COMPILER}"
#define NYX_CXX_COMPILER_ID "${CMAKE_CXX_COMPILER_ID}"

#define NYX_CXX_COMPILER_PREDEFINES_COMMAND "${CMAKE_CXX_COMPILER_PREDEFINES_COMMAND}"
#define NYX_CXX_COMPILER_TARGET "${CMAKE_CXX_COMPILER_TARGET}"
#define NYX_CXX_COMPILER_VERSION "${CMAKE_CXX_COMPILER_VERSION}"
#define NYX_CXX_FLAGS "${CMAKE_CXX_FLAGS}"
#define NYX_CXX_SIMULATE_ID "${CMAKE_CXX_SIMULATE_ID}"
#define NYX_CXX_STANDARD_INCLUDE_DIRECTORIES "${CMAKE_CXX_STANDARD_INCLUDE_DIRECTORIES}"
#define NYX_CXX_STANDARD_LIBRARIES "${CMAKE_CXX_STANDARD_LIBRARIES}"
#define NYX_CXX_STANDARD_REQUIRED "${CMAKE_CXX_STANDARD_REQUIRED}"
#define NYX_CXX_COMPILER_ABI "${CMAKE_CXX_COMPILER_ABI}"
#define NYX_CXX_COMPILER_ARCHITECTURE_ID "${CMAKE_CXX_COMPILER_ARCHITECTURE_ID}"
#define NYX_CXX_COMPILER_VERSION_INTERNAL "${CMAKE_CXX_COMPILER_VERSION_INTERNAL}"
#define NYX_CXX_LINKER_PREFERENCE "${CMAKE_CXX_LINKER_PREFERENCE}"
#define NYX_CXX_LINKER_PREFERENCE_PROPAGATES "${CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES}"
#define NYX_CXX_PLATFORM_ID "${CMAKE_CXX_PLATFORM_ID}"

/* Cmake version */
#define NYX_CMAKE_VERSION "${CMAKE_VERSION}"
#define NYX_CMAKE_VERSION_MAJOR "${CMAKE_MAJOR_VERSION}"
#define NYX_CMAKE_VERSION_MINOR "${CMAKE_MINOR_VERSION}"
#define NYX_CMAKE_VERSION_PATCH "${CMAKE_PATCH_VERSION}"

/* Are we using external fmt library? */
#cmakedefine NYX_EXTERNAL_FMT

/* Callbacks */
void signal_callback(int signum);

/* Compiler version */
#include "platform/compiler_version.h"

#endif // PLATFORM_PLATFORM_H